Esto es lo que pone Borja.


<div 
		style="float:left;top:0%;height:20%;left:0%;width:100%" 
		class="gridQuery_button"
>

	<button value="g1" 
			onclick="ajaxaction('select_group', {'idPanel':'group','idFrame':'buttons','item':'g1'});" 
			style="height:100%;width:100%;position:relative;" 
			class="menuPOS"
	>

		<label style="position: absolute;top: 0px;left: 50%;">  </label>
		<label>g1</label> 

	</button>

</div>

Y mi estilo:
.menuPOS {
    -moz-border-bottom-colors: none;
    -moz-border-left-colors: none;
    -moz-border-right-colors: none;
    -moz-border-top-colors: none;
    background-color: #0000FF;
    border-color: -moz-use-text-color;
    border-image: url("images/posbutton.png") 6 6 6 6 repeat stretch;
    border-style: solid;
    border-width: 6px;
    color: #FFFFFF;
}

El script ajax action
 bas_frmx_form.prototype.sendAction= function(action, params, type){//frameid,action, params){
	var data= new FormData();
	// what is type: undefined or ???. Like a class of destination or destination type of the action?	
	if (type == undefined)data.append("action",action);//data = {"action": action};
	else data.append("SessionAction", action);//data={"SessionAction": action};
	var row_selected = select_item();
	if ( row_selected != undefined){
		data.append("selected", parseInt(row_selected));
		var temp = this.selectedItems();
		data.append("selected_ext", this.arraytoJSON(temp));
	}
	for (var param in params){
		if (params[param] != undefined){
			if ((params[param].name == undefined)||(params[param].type != undefined)) data.append(param,params[param]);//data[param]= params[param];
			else data.append(params[param].name,params[param].value); // data[params[param].name]= params[param].value;
		}
	}
	data.append("XHR", 1); // data['XHR']=1;
	data.append("sessionId", this.sessionId); // data['sessionId']= this.sessionId;
	$.ajax({type:'POST'
		, dataType: "json"
		, contentType:false
		, data: data //TODO: include session data.
		, processData:false
		, cache:false
		, context: this
	}).done(this.recvActionResponse).fail(this.actionError);
};

Y un submit desde javascript sin tener definido ning√∫n formulario
function post_to_url(path, params, method) {
    method = method || "post"; // Set method to post by default if not specified.

    // The rest of this code assumes you are not using a library.
    // It can be made less wordy if you use one.
    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);

    for(var key in params) {
        if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", key);
            hiddenField.setAttribute("value", params[key]);

            form.appendChild(hiddenField);
         }
    }

    document.body.appendChild(form);
    form.submit();
}
